///DB
1.관계 대수 : 관계 대수는 관계형 데이터베이스에서 원하는 정보와 그정보를 어떻게 유도하는가를 기술하는 절차적인 언어이다
                 일반 집합 연산과 순수 관계 연산

2.관계 해석: 관계해석은 원하는 정보를 무엇이라는 것만 정의하는 비절차적인 언어이다.
              프래디켓 기반을 두고 있다.

3.데이터 베이스의 특성
      real time accessibility 실시간 접근성 : 수시적이고 비정형적인 질의에 대하여 실시간 처리 응답이 가능해야함 
      continuous evolution 계속적인 변화 : 새로운 데이터의 삽입 삭제 갱신 최신데이터 유지 
      concurrent sharing 동시 공용 : 여러 사용자가 동시 데이터 사용
      content reference 내용에 의한 참조 :  데이터 베이스에 있는 데이터를 참조할떄 데이터 레코드와 주소나 위치에 의해서가 아니라 사용자가 요구하는 데이터 내용으로 데이터를 찾음

4. relation 디그리 속성의 수 

5. 분산 데이터베이스
     장점 : 분산제어가 용이 
               지역 가치성이 높음
              효용성과 융통성이 높음
              점진적 확산성이 쉬움
      단점 : 보안성이 낮음
              처리 비용증가
              dbms 수행 기능이 복잡
              잠재적 오류가 증가
              개발 비용 증가
6. 시스템 카탈로그  일반 사용자가 보는건 가능하나 직접 갱신은 불가 
7. 데이터 베이스의 물리적 설계 단계 
    저장 레코드 양식 설계
    레코드 집중의 분석 설계
    접근 경로 설계
   인덱스 구조 
   레코드 크기
   파일에 존재하느 레코드 개수
   파일에 대한 트랜잭션의 갱신과 참조 성향
   시스템 운용시 파일 크기의 변화 가능성 
8.sql 명령어 
  ddl: create,alter,drop
  dml: select,insert,delete,update
  dcl: commit,rollback,grant,revoke

9. 스키마란?
데이터 베이스의 구조와 제약사항이 묘사된 메타 데이터의 집합이다 

10. 로킹?
   로킹 단위가 작아지면 병행성 수준이 높아지나 오버헤드가 증가한다.
   로킹은 주요 데이터의 엑세스를 상호 배타적으로 운영
   로킹 단위는 병행 제어에서 한꺼번에 로킹할수 있는 개체의 크기를 의미함
   데이터베이스 파일 레코드 등은 로킹 단위가 될수 있다

11.데이터 베이스의 정의
    통합된 데이터(integrated data)
    저장된 데이터(stored data)
    운영 데이터(operational data)
     공영 데이터(shared data) 

12. 3층 스키마란 ?
    개념 스키마:데이터베이스의 전체적인 논리적 구조
     내부 스키마:데이터 베이스의 물리적 구조
    외부 스키마 =사용자뷰 : 사용자나 응용 프로그래머 각 개인의 입장에서 필요로하는 논리적 구조를 정의

13. y는 x의 함수적 종속 
     x->y

14 degree : 가지의 최대수  
    터미널 노드:자식노드가 없는 노드

15. 개체 관계 모델(e-r 모델)?
     특정 dbms를 고려한것은 아니다
     1976년 피터 첸이 제안하였다
     개체 타입과 관계 타입을 기본 개념으로 현실 세계를 개념적으로 표현하는 방법이다
     E-R 다이어 그램에서
       관계 타입 :마름모,
       속성 :타원
      개체집합:사각형
     선,링크: 개체타입 속성을 연결 
     

16 데이터 모델 구성요소
     구조(structure): 논리적으로 표현된 개체들 간의 관계를 표시함
     연산 (operation): 데이터베이스에 저장된 실제 데이터를 처리하는 방법을 표시함 
     제약조건 (connstraint): 데이터베이스에 저장될 수있는 실제 데이터의 논리적인 제약조건을 표시함 

17. 색인 순차 파일?
     순차 처리와 직접 처리가 모두 가능
     레코드를 추가 및 삽입하는 경우, 파일 전체를 복사할 필요가 없다.
     레코드 삽입,삭제 갱신이 용이하다 
     인덱스 저장하기 위한 공간과 오버플로우 처리 별도 공간 필요
      인덱스를 이용하여 해당 데이터 레코드에 접근하기 때문에 속도가 느림
      색인 구역은 트랙색인 구역, 실린더 색인 구역, 마스터 색인 구역으로 구성 

18. 정규화란?
     정의 : 함수적 종속성 등의 종석성 이론을 이용하여 잘못 설계된 관계형 스키마를 더 작은 
     속성의 세트로 쪼개어 바람직한 스키마로 만들어 가는 과정
     목적 : 어떠한 릴레이션이라도 데이터베이스 내에서 표현 가능하게 만든다.
             효과적인 검색 알고리즘을 생성할 수 있다.
             중복을 배제하여 삽입,삭제, 갱신 이상의 발생 방지
             데이터 삽입시 릴레이션을 재구성 할 필요성을 줄임
     비정규
 
        도메인인 원자값
           
     1NF

         부분적 함수 종속 제거

     2NF

         이행적 함수 종속 제거

     3NF

         결정자이면서 후보기가 아닌것 제거

     BCNF

        다치 종속

     4NF

        조인 종속성 이용

     5NF

19. 이행적 함수 종속?
    a->b b->c일때 a->c 
     2nf -> 3nf

20 릴레이션 특징?
     모든 튜플은 서로 다른 값
     각 속성은 릴레이션 내에서 유일한 이름 가진다
     하나의 릴레이션에서 튜플의 순서를 가지지 않는다
     모든 속성 값은 원자 값이다

21. transaction 특징(트랜잭션)
     데이터베이스에서 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야 할 일련의 연산들 의미

     Atomicity (원자성): 데이터베이스에 모두 반영되든지 아니면 전혀 안되든지
     Consistency(일관성) : 성공적으로 완료되면 언제나 일관성 있는 데이터베이스 상태로 변환
     Isolation(독립성): 둘 이상의 트랜잭션이 동시에 병행 실행되는 경우 어느 하나 연산이 끼어 들수 없음
     Durability(영속성,지속성) : 성공적인 트랜잭션의 결과는 영구적으로 반영

22. 데이터 베이스의 특성
     실시간 접근성(real-time accessibility): 실시간 처리 응답이 가능해야함
     계속적인 변화(continuosus evolution): 새로운 데이터 삽입 삭제 갱신 항상 최신 데이터 유지
     동시 공용(concurrent sharing): 여러 사용자가 동시에 자기가 원하는 데이터를 이용 가능
     내용에 의한 참조(content reference): 데이터를 참조할때 레코드나 주소가 아닌 데이터 내용으로 참조 

23 데이 베이스의 설계 단계
     요구 분석단계-> 개념적 설계 단계-> 논리적 설게 단계-> 물리적 설계 단계-> 구현 단계

24 데이터 모델의 구성 요소
    구조: 논리적으로 표현된  개체들 간의 관계 
    연산 : 데이터 베이스에 저장된 실제 데이터 처리 방법 표시
    제약조건 :실제 데이터의 논리적인 제약 조건

25 뷰?
   물리적으로 존재하지 않는 가상 테이블이다.
   사용자에게 접근이 허용된 자료만 제한적으로 보여주기 위해 하나이사의 기본 테이블롭터 유도된 가상 테이블이다.

26. 시스템 카탈로그 
    *주의점: 사용자가 직접 생성하고 유지는 불가하다 그러나 검색은 가능하다

27. SELECT?
   그리스 문자 시그마를 사용하는 관계 대수 연산

28. 순차파일?
     대화식 처리보단 일괄 처리에 적합한 구조
     어떤 형태의 입출력 매체에서도 처리가 가능
     연속적인 레코드의 저장에 의해 레코드 사이에 빈공간이 존재하지 않으므로 기억장치 효율이 좋음
     새로운 레코드를 삽입시 파일 전체를 복사해야함

29.CODASYL DBTG?
   네트워크형 데이터 모델이다.

30. Cascade 참조

31. Anomaly(이상)
  데이터 중복으로 인해 릴레이션 조작 시 예상하지 못한 곤란한 현상이 발생

32. Synonm
해싱에서 동일한 홈주소로 인하여 충돌이 일아난 레코드의 집합

33. 참조 무결성 
 릴레이션 r1에 저장된 튜플이 릴레이션 r2에 있는 튜플을 참조되는 r2에 튜플이 반드시 존재하는 무결성 규칙

34.operation
데이터 모델의 구성요소중 데이터베이스에 표현된 개체 인스턴스를 처리하는 작업에 대한 명세로서 데이터베이스를 조적하는 기본 도구

35.cardinality?
릴레이션에 존재하는 튜플의 양


 
     
    
////////논리설계
1. store AC ?
mar<-mbr(addr)
mbr<-ac
m(mar)<-mbr 

1-1. load AC?
MAR<-MBR(ADDR)
MBR<-M(MAR),AC<-0
AC<-AC+MBR

2.마이크로 오퍼레이션 ?
   마이크로 오퍼레이션은 CPU내의 레지스터들과 연산장치에 의해서 이루어진다.
   프로그램에 의한 명령의 수행은 마이크로 오퍼레이션의 수행으로 이루어진다.
   마이크로 오퍼레이션이 실행될 때마다 CPU 내부의 상태는 변하게 된다.

3. 피연사의 위치에 따른 Instruction cycle time 짧은 것은?
   스택 인스트럭션 

4. 마이크로 명령 형식?
   수평 마이크로 명령
   수직 마이크로 명령
   나노 명령

5. rom과 유사한 성격을 가지며 and array 와 or array로 구성된것
    PLA(programing logic array)

6.곱셉관 나눗셈을 수행하는 연산명령 
   산술적 shift

7. 데이터의 주소를 표현하는 방식에 따라 분류할때 계산에 의한 주소
    약식주소 

8. 계산에 의한 주소 지정 방정식
     상대주소 :  명령어 자신의 기억장소를 기준으로 하여 데이터의 위치를 지정하는 방식
     베이스 레지스터 :  프로그램 재배치할때 이용 
     인덱스 레지스터 :  명령어 주소 +index register

9. 보조기억장치 일반적인 특징
    중앙처리 장치와 직접 자료 교환은 불가능하다 
    접근 시간이 크다
    cpu에 의한 기억장치의 접근 빈도가 높다
     주기억장치에 데이터를 저장할때 dma 방식을 사용하지 않는다.

10. 주소 명령어 
    0-주소: 스택
    1-주소: 누산기
    2-주소: 범용 레지스터 
    3-주소 : 범용 레지스터 

11. 메모리 인터리빙?
     캐시 기억장치, 고속 DMA 전송 등에서 많이 사용된다.

     기억장치의 접근 시간을 효율적으로 높일수 있다

     각 모듈을 번갈아 가면서 접근 할수 있다

     단위 시간에 여러 메모리의 접근이 가능하다

      중복적인 데어터 접근을 방지하기 위해서 연속된 데이터 또는 명령어들을
      기억장치 모둘에 순차적으로 번갈아 가면서 처리하는 방식
       
     중앙처리장치와 기억장치 사이에 실질자적인 대역폭을 늘리기 위한 방법 

12 주소 설계시 주의점 
     주소를 효율적으로 나타낼수 있어야한다
     주소 공간과 기억 공간을 독립시켜야한다
     전반적으로 수행속도가 증가할수 있도록해야한다
      주소 공간과 기억 공간을 일치하면안된다.
      주소표시는 2진법으로 표기한다.

13. wirte-through?
    캐시 메모리의 기록 정책 가운데 쓰기 동작이 이루어질 때마다 캐시 메모리와
    주기억장치의 내용을 동시에 갱신하는 방식

14. i/o 프로세스? 
   dma 제어기의 한계 극복 하기 위한 방식 

15. 다중 포토 메모리?
     다중 처리기 상호 연결 방법중 하나의 프로세서에 하나의 버스가 할당되어 버스를 이용하려는 
     프로세서 간 경쟁이 적은 방식이다.

16. D 플립플롭 클럭 펄스 들어올때 Q(t+1) 
     자기자신

17. 윈체스터 디스크 ?
    자기 디스크에 헤드가 가까울수록 불순물이나 결함에 의한 오류 발생이 생기므로 이를 해결하기 위한 디스크

18. Data flow machine?
    인스트럭션을 수행하는 것으로 데이터 추진 방식

19. 레지스터 참조 명령?
      CLA(clear AC)
      CIR(circulate right)
      HLT(halt)

20.  중앙처리장치 입출력 명령을 직접 수행하는 주기억장치와 입출력장치 사이에  데이터를 전달하는 일반적인 기능?
      주기억장치와 입출력 제어기 사이의 통신회선을 확보
      입출력 제어기와 입출력장치 인터페이스 사이의 통신회선 확보
      주기억장치의 주소, 데이터의 전달 방향 데이터의 정보를 저장하는 기능

21. 채널 기능?     
     하나의 제어기로 여러 종류의 입출력 장치들을 공통적으로 제어하는 기능

22. RISC/CISC
             명령어    주소지정   레지스터  전력소모  처리속도   용도 
     RISC:   적음        간단         많음       적음      빠름         서버/원크스테이션 
     CISC:    많음        복잡        적음        많음      느림          개인용 컴터

23. 사이클 스틸 (Cycle steal) 와 DMA 의 차이
       주기억장치 사이클의 한주기만 정지 

24. 마이크로프로그램 제어기에서의 마이크로 인스트럭션 주소 결정하는 정보
      인스트럭션 레지스터 
      CPU의 상태 레지스터
      마이크로 인스트럭션에 나타난 주소

25. 산술 파이프라인 구조 
      지수 비교 -> 가수 조정 -> 가수합산-> 정규화

26 디멀티플랙서 
    1개 input과 n개의 output을 가진다.

27.배열 처리기(Array Processor)?
    PE(Processing Elenmet)라 불리는 복수개의 산술, 논리 연산 장치를 갖는 프로세서로 동기적으로 병렬처리를 수행
    하고 동시에 같은 기능을 수행하는 처리기

28. cpu의 메이저 상태
    Fetch : 명령어 주기억장치에서 중앙 처리장치의 명령 레지스터가져와 해독하는 단계
    Indirect : 모든 명령 수행시 유효주소를 구하기 위한 메이저 상태
    Execute : Fetch 명령을 실행하는 단계
    Interrupt :  복귀주소(pc)를 저장하고 제어 순서를 인터럽트 처리 프로그램의 첫 번쨰 명령으로 옮기는 단계

29.프로그램에 의한 I/O ?
    단계1: 상태 레지스터 읽기
    단계2: 상태 레지스터의 값이 set 상태이면 단계3으로 그렇지 않으면 단계1로
    단계3: 데이터 레지스터 읽기
     29-1. 프로그램 I/O 인터페이스
     데이터 레지스터
     장치의 동작 상태를 나타내는 FLAG
     장치 번호 디코더

30. 자기 테이프?
    각 블록 사이에 간격이 존재
    7-9bit가 동시에 수록되고 전달
    Sequential Access가 가능
    
31.  고정배선 제어방식/ 마이크로 프로그램 특징?
   반응 속도: 고속    /     저속
   회복 복잡도: 복잡  /     간단
   경제성:     비경제적/   경제적
   융통성:      없음  /  있음
    구성 :     하드웨어/ 소프트웨어

32. 파이프 라인이 정상적인 동작에서 벗어나게 하는 원인?
    자원 충돌
    데이터 의존성
    분기 곤란

33. Mapping?
     가상주소를 실주소로, 데이터의 논리적 구조를 물리적 구조로, 
     매크로 동작을 마이크로 명령어 주소로 변환하는 작업

34. 중앙 연산 처리장치의 하드웨 요소
    IR
    MAR
    PC

35. 공유-기억장치 다중프로세서 시스템에서 사용되는 연결구조(강결합)
     버스
     크로스바 위치
     다단계 상호연결망
 
36. 반대로 (약결합)
    큐브

37. 함수와 매크로의 차이
    함수는 고급언어에서 반복되는 연산처리로 사용된다.
    메크로는 어셈블과 같은 하위언어에서 반복되는 연산 처리로 사용된다.

28.  DRAM : 전원 공급되어도 일정 기간이 지나면 전하가 방전되므로 주기적인 재충전이 필요하다 
      SRAM: 전원 공급되는 동안에는 기억 내용이 유지됨      
       DRAM / SRAM
구성소자 콘덴서    플립플롭
전력소모 적음         많음
적근속도 느림          빠름
접적도(밀도)높음        낮음
가격      저가           고가
용도      주기억장치    캐시 메모리

29.전파지연
   논리회로에서 입력된 신호가 출력으로 전파디는데 걸리는 평균 전이 지연시간이다.
   Gate상의 operating speed는 전파지연에 반비례한다.
   더 빠른 gate를 사용함으로써 전파지연시간을 줄일 수 있다
   ALU의 Parrarl-adder에 전파지연을 줄이기 위해 carry look ahead를 이용한다.

30.연관기억 장치 (associatvie memory)
      기억장치에 기억된 정보를 액세스하기 위하여 주소를 사용하는것이 아니라 기억된 정보의 일부분을 이용하여 원하는 정보를 찾는다.
병렬처리하며 고가이다.
  
31. 다중처리기 고려사항
 메모리 충돌 문제
 메모리 접근의 효율성 문제
 캐시 일관성 문제

32.fetch 메이저 상태
    mar<-pc:pc값을 mar로 이동
    pc<-pc+b:pc의 값을 인스트럭션의 바이트 수 b만큼 증가
    IR<-MBR :MBR에서 연산 부분을 인스트럭션 레지스터로 옮김

33. 폰노이만 형 컴퓨터 연산장치 기능
 제어 기능
함수연산 기능
전달 기능 
입출력 기능 

34. 4096 WORD  워드당 16 비트일시 MAR은 몇비트?
  워드의 n 개수는 MAR 2^n개이다 즉 4096은 2^12이므로 12비트이다.

35.메모리 관린 하드웨어의 기본적인 역활
    논리주소를 물리주소 변환
    허용 되지 않는 메모리 접근 방지
     메모리 동적 재배치

36.인터럽트 처리 루틴?
인터럽티 인식->현재 상태 보존->요청 인터럽트 서비스로 분기 및 서비스-> 사용자 상태 복구및 재개

37.제어 장치 구현하는 제어방식
상태플립플롭 제어 방식
PLA 제어방식
마이크로프로그램 제어방식

38.인터럽트 서비스 루틴의 기능
처리기 상태 복구
인터럽트 원인 결정
처리기 레지스터의 상태 보존
상대적으로 낮은 레벨의 마스크 레지스터 클리어

39. 짝수 패리티 검출법
    P1P2 BIT  P3 BIT BIT BIT 
    P1에 1비트시  1,3,5,7, 검사
    P2에 1비트시 2,3 ,6,7 검사 
    P3에 1비트시 4,5,6,7검사

40.cluster?
여러대의 상호 독립적인 동작이 가능한 컴퓨터들이 연결된 전체 컴퓨터들의 집합으로
전체 컴퓨터들이 상호 연결 되어 협력하면서 하나의 캄퓨팅 자원인것처럼 동작하는것

41.외부인터럽트?
오퍼레이터나 타이머에 의해 의도적으로 프로그램이 중단된 경우

42.내부 인터럽트
잘못된 명령이나 데이터를 사용할때 발생하는것 이를 트랩이라고도 한다.

43.폴링?
소프트웨어에 의해 인터럽트의 우선순위 판별

44.하드와이어 방식의 제어장치(고정배선 제어장치)?

고정배선 제어장치 /마이크로 프로그래밍 기법
반응속도  고속                저속
회로복잡도  복잡              간단
경제성        비경제적       경제적
융통성          없음          있음
구성          하드웨어        소프트웨어

45.Vectored interrupt?
하드웨어 신호에 의해서 특정 번지의 서브루틴을 수행하는것

46.접근속도
cpu 레지스터-> 캐시->램->롬->자기코어->자기디스크->자기테이프




    
            

////운영 체제 
1. 커널은 프로스세스 관린 기억 장치 관리 입출력 관리등의 기능을 수행한다.
   쉘은 사용자의 명령어를 인식하여 프로그램을 호출하고 명령을 수행하는 명령어 해석기이다.

2. fork: 새로운 프로세스 생성
   exit: 프로세스종료
   getpid: 자신의 프로세스 아이디를 얻음
   pipe: 프로세스 간 통신을 위한 경로 설정 
   exec: 새로운 프로세스 수행함
   wait: 자식 프로세스의 하나 종료될때까지 부모 프로세스를 임시 중지시키는 명령

3.운영 체제 주/종 처리기 
   주 프로세스 
       입출력과 연산을 담당
        운영 체제 수행
    종 프로세스 
         연산만 담당
         입출력 발생시 주프로세스 서비스 담당
    특징 : 서로 대칭 구조를 갖는다. 주프로스세스 종료시 시스템 전체가 다운된다
     *주의점 : 주종 처리기에서 주프로그램만 입출력 담당하는 비대칭 구조이다.

4. inode?
  파일의 링크수
  파일이 만들어진 시간
  파일의 크기 
  파일의 보호 권한
  생성 시기
  최종 변경 시기 
  최근 사용시기 
  데이터 저장된 블록의 시작주소 

5. eschenbach 스케쥴링 
   탐색시간 및 회전 지연시간의 최적화 스케쥴링 

6. 스레드는 프로세스 외부에 존재할수 없다

7.디렉터리 구조 
  1단계 디렉토리: 가장 간단한 형태 모든 파일이 하나의 디렉토리 내에 존재
  2단계 디렉토리: 중앙에 마스터 파일 디렉토리가 잇고 그아래 디렉터리 존재
  트리 구조 디렉토리:  하나의 루트 디렉터리와 여러개의 종속 디렉터리 구성
  비순환 그래픅 디렉토리: 하위 파일이나 하위 디렉터리 공용으로 사용 ,사이클 허용하지않는구조
  일반 그래프 디렉토리 : 트리 구조에 링크를 첨가시켜 순환허용 구조 

8. 분산 처리 운영체제 시스템 ?
   유용한 자원을 공유하며 사용가능
   시스템 점진적 확장이 용이
   사용자는 각 컴퓨터 위치는 몰라도 자원의사용이 가능
   중앙 집중형 시스템에 비해 보안성이 낮다

9. 파일 디스크립터?
   파일 제어 블록이라고 한다
   시스템에 따라 다른 구조를 갖는다
   파일 시스템이 관리하므로 사용자가 직접 참조가 불가하다
   모든 파일이 하나의 파일 디스크립터를 공용하지 않고 독립적인 존재이다.
   File control block 이라고도 한다.

10.unix의 구조
    트리 구조를 가지고 있다

11. loader?
    Absoulte Loader: 적재기능만 수행
    Compile and GO loader: 별도의 로더 없이 로더 기능만 수행
    Direct Linking loader: 기능 로더
    Dynamic Loading Loader: 일부분만 적재 로더

12.Capability List?
   접근 제어 행렬에 있는 각 행, 즉 영역을 중심으로 구성한 것으로서 
   각 사용자에 대한 자격은 객체와 그 객체에 허용하되는 연산 리스트

13 언어 번역 프로그램?
    고급 언어 작성된 소스 프로그램을 기계어로 변환 시켜준다.

14.강결합 시스템이란?
   프로세스 간의 통신은 공유 메모리를 이용
   여러 처리기들간에 하나의 저장 장치를 공유
   메모리에 대한 프로세서 간의 경쟁 최소화가 고려

15.약결합 시스템이란?
    각 프로세서 마다 독립된 모모리를 가진 시스템이다.
    각 시스템 독자적 운영체제를 가진다.
     분산 처리 시스템이라고도 한다.

16. super block?
     unix 파일 시스템 구조에서 전체 파일 시스템에 대한 정보를 저장하고 있는 블록이다.

17 시간 구역성?
    스택
    순환문
    부프로그램

18 공간 구역성?
     배열 순회
     순차적 코드의 실행
     프로그래머들이 관련된 변수   
19 은행알고리즘?
   회피기법

20.파일 시스템?
사용자가 파일 생성 수정 제거 가능
여러 사용자가 공동으로 사용 가능
사용자와 보조기억장치 사이의 인터페이스 제공
사용자가 적합한 구조로 파일을 구성할수 있도록한다.



   

 ////////////////////////소프트웨어 공학 
1. 럼바우 분석기법 
   객체모델(object model): 실세계 문제 영역으로부터 시스템이 요구되는 객체를 찾아내는 
                                객체들 간의 관계를 규정하는것
   동적모델(dynamic model):시간의 흐름에 따라 변하는 객체들 사이의 제어 흐름, 상호작용,연산 순서 등의 동적인
   기능모델(function model) :다수 프로세스 간의 데이터의 흐름을 처리과정을 나타낸것

2. 나선형 모형에 대한 설명 ? 
   보헴이 제안 , 폭포수 모형과 프로토 타입 모형의 장점에 위험 분석 기능을 추가한 모형
   대규모 시스템의 소프트웨어에 개발에 적합
   위험성 평가에 크게 의존하기 때문에 이를 발견하지 않으면 문제가 발생
   여러번의 개발 과정을 거쳐 점진적으로 완벽한 소프트웨어를 개발한다

3. 소프트웨어 재공학활동
   역공학이란?
   원시코드로부터 설계정보 추출 및 절차 설계 표현, 프로그램과 데이터 구조 정보 추출
   코드->흐름도->자료구조도->자료 흐름도 순
   *주의점: 새로운시스템으로 개선하는 변경 작업이 아니다 기존 코드를 이용한다.
    분석이란?
    기본 소프트웨어의 명세서를 확인하여 소프트웨어의 동작을 이해하고 재공학 대상을 선정
    소프트웨어 재공학이란?
   소프트웨어의 위기를 해결하기 위해 생산성이 아닌 유지보수 생산성을 해결하는 방법

4 FTR의 지침 사항
   자원과 시간 일정을 할당
   문제 영역을 명확히 표현
   논쟁과 반박을 제한한다
   모든 검토자들을 위해 의미 있는 훈련을 행한다
   해결책이나 개선책에 대해서는 논하지 말라
   참가자 수를제한하고 사전 준비 강요
   검토자들은 사전에 작성한 메모 공유
   검토의 과정과 결과를 재검토 
   의제를 제한한다.

5. 응집도(Cohesion)?
   응집도란? 한 모듈 내부의 처리 요소들 간의 기능적 연관도를 나타내며, 
   모듈 내부 요소는 명령어. 명령어의 모임 호출문 특정 작업 수행 코드등이다

6. component?
 소프트웨어 재사용과 관련하여 객체들의 모임, 대규모 사용 단위      
7. 오퍼레인션(operation)?
   오퍼레인션은 클래스 내의 객체에 의한 함수이거나 변형이다.
   메소드는 한클래스에 대한 오퍼레이션의 구현이며 일반적으로 객체 지향 설계에서는 동일시하며 함수 지향 설계에서는 함수로 대응한다.

8.CASE 기능
  그래픽지원
  소프트웨어 생명주기 전단계의 연결
  다양한 소프트웨어 개발 모형 지원
  시스템 개발과정의 일부 또는 전체를 자동화
  개발도구 와 개발 방법론이 결합
  정형화된 메커니즘을 소프트웨어 개발에 적용하여 생산성향상


9. 소프트웨어 프로젝트관리의 3P
   Process
   people
   problem

10.CPM(critical path method)?
    프로젝트 내에서 가작업이 수행되는 시간과 작업 사이의 관계를 파악
    경영층 과학적인 의사 결정
    효과적인 프로젝트의 통제를 가능

11. 간트 차트?
     작업 일정을 한눈에 볼수 있도록 해주며 막대그래프의 형태 
     시간선 차트라고 한다

12. 소프트웨어 형상관리?
    소프트웨어에서 일어나는 수정이나 변경을 알아내고 제어하는것
    소프트웨어 개발의 전체 비용 줄이고, 개발 과정의 여러방해 요인이 최고화되도록 보장하는것을 목적으로함
    형상관리에서 주용한 기술주의 하나는 버전제어 기술이다.

13. 소프트웨어 재사용?
     *주의점: 소프웨어 재상요은 새로운 개발 방법 도입하는것이 아니다.

14.객체지향 설계 단계?
    문제정의-> 요구 명세화-> 객체 연산자 정의-> 객체 인터페이스 결정-> 객체 구현
15.시스템 검사? 
   복구 검사: 소프트웨어 여러가지 결함을 주어 실패하도록 한후 올바르게 복구되는지 확인하는 검사
   보안 검사: 시스템 내에 설치된 보호 도구가 부적당한 침투로부터 시스템을 보호할수 있는지 확인하는 검사
   강도 검사: 비정상적인 상황에서 소프트웨어를 실행시키기 위한 검사
   성능 검사: 통합된 시스템에서 소프트웨어의 실행 시간을 검사(선능을 검사)
16. 결합도(coupling)
    data coupling : 모듈간의 인터페이스가 자료 요소로만 구성될때의 결합도
    stamp coupling : 묘듈 간의 인터페이스로 배열이나 레코드 등의 자료구조가 전달될때의 결합도
    control coupling :한 모듈에서 다른 모듈로 논리적 흐름을 제어하는데 사용하는 제어 요소가 전달되는 결합도
    external coupling : 어떤 모듈에서 외부로 선언한 데이터를 다른 모듈에서 참조할때의 결합도
    common coupling : 공유되는 공통 데이터 영역을 여러 모듈이 사용할 때의 결합도
    content coupling : 한 모듈이 다른 모듈의 내부 기능 및 내부 자료를 직접 참조하거나 수정할때의 결합도
17.HIPO?
   도형목차, 총괄도표 ,상세도표로 구성 전개
18 PERT 차트?    
    작업들 간의 상호 관련성, 결정경로, 경계시간 자원 할당을 제시
19.객체 지향 모형에서 기능 모형의 설계 순서
    입출력 결정->자료흐름도 작성->기능의 내용을 상세히 기술-> 제약사항을 결정하고 최소화
20.자료 흐름도?
   process,data flow, data store,terminator
21. 유지 보수 종류?
     수정 보수(corrective maintenace): 시스템을 운영하면서 검사 단계에서 발견하지 못한 오류를 찾아 수정하는 활동(검사단계)
     적응 보수(adaptive maintenace): 소프트웨어의 수명 기간중에 발생하는 환경의 변화를 기존 소프트웨어반영하기 위하여 수행하는 활동(새환경)
     완전화 보수(perfective maintenace): 소프트웨어의 본래 기능에 새로운 기능을 추가하거나 성능을 개선하기 위해 소프트웨어를 확장시키는활동(새기능)
     예방 보수(preventive maintenance): 미래에 유지보수를 용이하게 하거나 기능을 향상시키기 위해 소프트웨어를 변경하는 활동(유지보수)
22 자료사전?
     = is composed 자료 정의
     + 자료의 연결 and
     () 생략 가능한 자료 optional
     [|] 자료의 선택 or
     {}  자료의 반복 
23. 화이트 박스 ?
      조건 검사, 루프 검사, 데이터 흐름 검사
      설계 절차에 초점을 둔 구조적 테스트
      원시코드의 모든 문장을 한번 이상 실행함으로써 수행
      Loop test

24 블랙 박스?
    인터페이스 오류 행위 및 성능 오류 초기화와 종료 오류 등을 발견하는 기법
    자료 구조 오류 찾기 가능
    Equivalence Partitioning Test: 입력 자료에 초점을 맞춰 검사 사례를 만들고 검사하는 방법으로 동등 분할 기법
    Boundary Value Analysis:입력 자료에만 치중한 동치 분할 기법을 보완하기 위한 기법
    Comparison Test: 여러 버전의 프로그램에 동일한 검사 자료를 제공하여 동일한 결과가 출력되는 검사
    cause-effect graphing test:입력데이터 간읜 관계와 출력에 영향을 미치는 상황을 체계적으로 분석하여 효용성 높은 검사 사례를 선정하여 검사 기법

25. spiral 모형 생명주기 모형
     계획 수립 -> 위험 분석-> 개발 ->평가

26.Message?
   객체에게 어떤행위를 지시하는 명령
    

27.Correctness?
   소프트웨어 품질 목표중 사용자의 요구 기능을 충족시키는 정도를 의미한다.

28booch 방법?
미시적 개발 프로세서와 거시적 개발 프로세서를 모두 포함
클래스와 객체들을 분석 및 식별하고 클래스의 속성과 연산을 정의
클래스와 객체의 의미를 식별
클래스와 객체들의 관계 식별
클래스와 객체를 구현

29.자료 흐름도
프로세스 
단말 
자료 저장소 
자료흐름

30.migration
소프트웨어 재공학의 주요 활동중 기존 소프트웨어 시스템을 새로운 기술 또는 새로운 하드웨어 환경에서 사용할수 있도록 변화하는 작업

31.오류 메세지 경고 지침
메세지는 이해가 쉬워야한다
오류로부터 회복을 위한 구체적인 설명이 제공되어야 한다
오류로 인해 발새오딜수 있는 부정적인 내용은 절대 사용해선 안된다.
소리나 색등을 이용하여 듣거나 보기 쉽게 의미 전달을 해야한다.

32.소프트웨어에 대한 인터페이스?
소프트웨어에 의해 간접저으로 제어되는 장치와 소프트웨어를 실행하는 하드웨어
기존의 소프트웨어와 새로운 소프트웨어를 연결하는 소프트웨어
순서적 연산에 의해 소프트웨어를 실행하는 절차

33.예방 유지보수
소프트웨어 재공학은 어떤 유지보수 측면에서 소프트웨어 위기를 해결하는 방법
수정 유지보수: 시스템을 운영하면서 검사 단계에서 발견하지 못한 오류를 찾아 수정하는 활동

34.Istance?
 객체지향 기법에서 클래스에 속한 각각의 객체를 의미 

35.Method?
 객체의 상태를 참조하거나 변경하는 순단이 되는것으로 동작(operation)이라고도함

36.module?
소프트웨어 구조를 이루는 기본단위

37.프로타이핑 모형?
실제 개발된 소프트웨어 대한 견본재품(프로토타입)을 만들어 최종결과물을 예측하는 모형으로 , 
 개발 단계에서 오류 발견 및 수정이 가능 
프로토타이핑 모형은 발주자나 개발자 모두에게 공동 참조 모델을 제공한다.
사용자의 요구사항을 충실히 반영할수 있다.
프로토 타이핑 모형은 소프트웨어 생명주기에서 유지보수가 없어지고 개발단계 안에서 유지보수가 이루어진다.

38.content coupling(내부 결합도)
한모듈에서 다른 모듈의 내부로 제어 이동
한 모듈이 다른 모듈 내부자료 조회또는 변경
두모듈이 동일한 문자의 공유

39.데이터 결합도(data coupling)
모듈간의 인터페이스가 자료 요소로만 구성될떄의 결합도

40.스탬프결합도(stamp coupling)
모듈간의 인터페이스로 배열이나 레코드 등의 자료구조가 전달될때의 결합도

41.제어 결합도(control coupling)
한모듈에서 다른 모듈로 논리적인 흐름을 제어하는데 사용하는 제어요소가 전달될때의 결합도

42.외부 결합도(External coupling)
어떤 모듈에서 외부로 선언한 데이터를 다른 모듈에서 참조할때의 결합도

43.공통결합도(Common coupling)
공유되는 공통 데이터 영역을 여러모듈이 사용할때의 결합도

44.control?
시스템의 구성 요소 중 입력된 데이터를 처리 방법과 조건에 따라 처리하는 것을 의미

45.프로젝트 계획 소프트웨어의 범위?
소프트웨어의 성능
소프트웨어의 제약조건
소프트웨어의 신뢰도
소프트웨어의 인터페이스

46.component ?
소프트웨어의 재사용과 관련하여 객체들의 모임, 대규모 재사용 단위로 정의




///////////////네트워크 
1.CSMA/CD 와 토큰 패싱?
   
  CSMA/CD 방식
  CSMA 방식에서 충돌이 발생하는 문제점을 해소하기 위해 CSMA 방식에 충돌 검출 기능과
  충돌 발생시 재송신하는 기능을 부가하는 방식
  CSMA/CD는 버스 또는 트리포톨로지에서 가장 많이 사용되는 기법이다.
  CSMA/CD는 비경쟁 기법의 단점인 대기 시간의 상당 부분 제거 될수 있다
  CSMA/CD는 LAN 표준 프로토콜은 IEEE802.3 이다.
 
  토큰패싱?
  회선에 대한 사용권한을 의미하는 토큰이 각 노드를 차례로 옮겨 다니는 방식입니다
  토큰패싱은 토큰을 분실할 가능성이 높다
  노드가 증가하면 토큰의 순회 시간이 길어지므로 네트워크의 속도가 저하됩니다

2.TDM? 
   다수의 타임 슬롯으로 하나의 프래임이 구성되고, 각 타임 슬롯에 채널을 할당하여 다중화 하는것이다.

3. 네트워크 계층 
    OSI 7 계층으로서 통신망을 통한 목적지까지 패킷 전달을 담당한다.
  
4. X.25 프로토콜?
    DTE와 DCE 간의 인터페이스를 저공하는 프로토콜이다.
    X.25 포로토콜은 세 개의 계층으로 구성된다.
    ITU-T에서 1976년에 패킷 교환망을 위한 표준 프로토콜이다.
    패킷형 단말기를 패킷 교환망에 접속하기 위한 인터페이스 프로토콜이다.

5.서버와 클라이언트 사이의 멀티미디어 송수신 하귀 위한 포로토콜과 웹문서 작성 사용하는 언어 
   HTTP,HTML

6. HDLC 프래임 구조/HDLC 프로토콜
   6-1.HDLC 프래임 구조
   flag: 프레임의 시작과 끝을 나타내는 고유한 비트 패턴(01111110)
   주소부(address field): 송수신국을 식별하기 위해 사용. 불특정 다수에게 전송하는 방송용은 '111111
                              시스템에 의해 임의로 수신국이 지정되는 시험용은 000000
    제어부(control field): 프레임의 종류를 식별하기 위해 사용. 제어부의 첫번쨰 두번째 비트를 사용하여 다음과 같이 프레임 종류 구별
                              i 프레임:정보 프레임, 제어부 0
                              s 프레임: 감독 프레임, 제어부 10 
                              u 프레임: 비번호 프레임,제어부 11
    정보부 (information field): 실제 정보 메세지가 들어 있는  부분,    송수신 측간의협의 따라 길이와 구성이 정해짐
    FCS(frame check sequence field) 프레임 내용에 대한 오류 검출, 일반적으로 CRC 코드 사용
    
    6-2.HDLC 프로토콜?
    점대점 링크 및 멀티포인트 링크를 위한 ISO에서 개발한 국제 표준 프로토콜이다.
    반이중 통신과 전이중 통신을 모두 지원
    동기식 전송 방식
    슬라이딩 윈도우 방식에 의해 흐름 제어
    
    
    6-3. Unnumber Frame?
    HDLC의 프레임 중 링크의 설정과 해체 오류 회복을 위해 주로 사용됨.

    6-4. HDLC 데이터 전송 동작 모드?
         NRM
         ABM
         ARM
     6-5 SUPERVISORY FRAME?
         Frame의 흐름제어 오류제어 위해 사용됨

7. IPV4 IPV6 사용 전략
   Dual stack
   tunneling
   header translation

8. go-back-n ARQ?
   송신 스테이션이 데이터 프레임을 연속적으로 전속하다가 NAK를 수신하면 에러가 발생한 프레임을 포함하여
   그이후에 전송된 모든 데이터를 재전송 방식

9.Cyclic Redundancy check?
   집단적으로 발생하는 오류에 대해 신뢰성있는 오류 검출
   프레임 단위로 오류 검출을 위한 코드를 계산하여 프레임 끝에 부착 이를 fcs라고도 함
 
10. 데이터 링크 계층 프로토콜?
    HDLC
    PPP 
    LLC
    LAP-B
    LAPB
    SDLC

10-1. PPP란?
      인터넷 접속에 사용되는 IETE의 표준 프로토콜이다.
       오류 검출만 제공되며 오류 복구와 흐름제어 기능은 제공 되지 않는다.
       IP 패킷의 캡슐화를 제공한다.
       비동기 및 동기식  점대점 링크에서 사용가능하다.

10-2 LAP-B란?
     HDLC를 기반으로 하는 비트 위주 데이터 링크 제어 프로토콜이다.
     X.25 패킷 교환망 표준의 한부분으로 ITU-T에 의해 재정되었다.

11.데이터 통신 동기 전송 방식?
    문자 또는 비트들의 데이터 블록을 송수신 한다.
    전송 데이터와 제어 정보를 합쳐서 Frame라고 한다.
    수신기가 데이터 블록의 시작과 끝을 정확히 인식하기 위한 프레임 레벨의 동기화가 요구된다
    문자 위주와 비트 위주 동기식 전송으로 구분

12. 데이터 전송 제어
    통신 회선 접속-> 데이터 링크 설정-> 데이터 전송-> 데이터링크 해체-> 통신 회선 절단

13. RTCP란?
    데이터 분배 과정에서 발생하는 서비스 품질에 관한 피드백을 제공
    RTP 소스의 transport-level 의 identifier를 전달
    minimal session control information을 전송
    

14. RTCP(real-time control protocol)의 특징?
     Session의 모든 참여자에게 컨트롤 패킷을 주기적으로 전송
     하위 프로토콜은 데이터 패킷과 컨트롤 패킷의 멀티플렉싱을 제공
     데이터 전송을 모니터링하고 최소한의 제어와 인증 기능만을 제공

15. 디지털 데이터를 아날로그 신호로 변조하는 방법
     주파수 편이 변조 (Fsk)
     위상 편이 변조(Psk)
     진폭 편이 변조(Ask)
     직교 진폭 변조(Qam)

16.  TMN(Telecommunication Management Network)의 기능요소
      NML(Network Management Layer)
      EML(Element Management Layer)
      NEL(Network Element Layer)
      BML(Bussiness Management Layer)

17. Piggyback?
     수신측에서 수신된 데이터에 대한 확인을 즉시 보내지 않고, 전송할 데이터가 있는 경우에만 
     데이터 프레임에 확인 필드를 덧붙여 전송하는 흐름제어 방식

18. stx?
     회선 제어하기 위한 제어 문자중 실제 전송할 데이터의 집합

19 syn?
     문자 동기

20 토큰패싱에서 토큰이란?
     체널의 사용권이 의미한다.

21. stop-and-Wait ARQ?
     자동 재전송 요청중 데이터 프레임의 정확한 수신 여부를 매번 확인하면서 다음 프레임을 전송해
     나가는 가장 간단한 오류제어 방식
     
     구현이 간단하고 송신측에서 최대 프레임 크기의 버퍼가 1개만 있어도 된다.
     각각의 프레임에 대해서 확인 메세지가 필요하다.
     데이터 프레임의 순서 번호를 이용하면 프레임의 중복 수신 여부를 알수 있다.

22.ICMP?
    IP 프로토콜엣는 오류보고와 수정을 위한 메커니즘이 없기 때문에 이를 보완하기 위해 설계됨
    ICMP는 네트워크 계층 프로토콜이다.
    ICMP 메세지는 하위 계층으로 가기전에 IP 프로토콜 데이터그램 내에 캠슐화한다.
    ICMP 메세지는 8바이트의 헤더와 고정길이의 데이터 영역으로 나뉜다

23. 회선 교환 방식?
    호 설정이 이루어지고 나면 정보를 연속적으로 전송할수 있는 전용 통신로와 같은 기능을 가진다.
    호 설정이 이루어진 다음은 교환기 내에서 처리를 위한 지연이 없다.
    회선 이용률 면에선 비효율적이다.
    에러없는 정보 전달 요구되는 데이터 서비스는 에는 부적합하다.

24.지연왜곡?
   하나의 전송 매체를 통해 여러 신호를 전달했을때 주파수에 따라 그 속도가 달라지는 현상

25. 인터넷 계층?
    TCP/IP모델 중 패킷을 목적지까지 전달하기 위해 경로 선택과 폭주 제어 기능을 가지고 있으며,
     ARP RARP등의 프로토콜이 제공되는 계층이다.
     패킷 교환 표준 프로토콜 X.25의 구성 계층 중 OSI 의 계층 3과 계층4의 일부 기능을 포함한다.

26. hand off?
    이동 통신 가입자가 셀 경계를 지나면서 신호의 세기가 작아지거나 간섭이 발생하여 통신 품질이
    떨어져 현재 사용중인 채널을 끊고 다른 채널로 절체하는 것을 의미한다.

27. 패킷 교환 방식중 가상회선 ?
    패킷들은 경로가 설정된 후 경로에 따라 순서적으로 전송하는 방식
    연결 설정시에 경로가 미리 결정되기 때문에 각 노드에서 데이터 패킷의 처리속도가 빠르다
    패킷이 전송되기 전에 논리적인 연결 설정이 이루어져잇다.
    모든 패킷이 동일한 경로롤 전달 되므로 순서적으로 전송됨
    패킷 손상시 복구가 가능

28.동축 케이블 특징 ?
    초기에는 주로 장거리 전화 전송망에 사용되었으나, 지금은 케이블 TV 분배망이나 LAN등에 널리 쓰인다.

29.비동기식 전송 ?
    문자의 시작과 끝에 각각 START 비트와 STOP 비트가 부가 되어 전송의 시작과 끝을 알려 전송하는 방식(시작 비트 :0 정지 비트:1)
    수신기는 자신의 클록 신호를 사용하여 회선을 샘플링하여 각 비트의 값을 읽어내는 방식
    


30.TCP ?
    TCP/IP 모델중 전송 계층 프로토콜로 순서 제어와 에러 제어를 수행한다.

31.CDMA ?
   시스템의 포화 상태로 인한 통화 단절 및 혼선이 적다
   실내 또는 실외에서 넓은 서비스 권역을 제공한다.
   배경 잡음을 방지하고 감쇄시킴으로써 우수한 통화 품질 제공
   산악 지형 또는 혼잡한 도심지역에서도 우수한 품질

32. 아날로그 데이터를 아날로그로 전송?
     PM
     FM 
     AM

33.IP 주소 구조 
    A Class 국가나 대형 통신망
    B Class 중대형 통신망
    C class 소규모 통신망
    D class 멀티 캐스팅용
    E class 실험용 
    
34.라우팅?
  BGP:외부 라우팅 프로토콜로서 간의 라우팅 테이블을 전달하는데 주로 이용된다,EGP의 단점을 보완하기위해 만든 자유시스템 라우팅
  RIP: 현재 가장 널리 사용되는 라우팅 프로토콜
        소규모 네트워크에 이용
  OSPF:경로수에 제한이 없으므로 대규모네트워크에 사용되는 라우팅
  EGP: 자율 시스템 간의 라우팅 즉 게이트웨이간의 라우팅에 사용
  IGP: 하나의 자율시스템 내의 라우팅에 사용되는 프로토콜

35.ASCII코드?
 ITU-T및 ISO에서 권고하고 있는 데이터 통신 코드
 7비트 정보와 1비트 패리티 검사용으로 사용

36. 메세지 교환?
     하나의 메세지 단위로 저장 전달 방식에 의한 데이터를 교환 하는 방식

37. 아날로그 디지털 부호화 방식인 송신측 과정을 순서
     표본화(Sampling)-> 양자화(Quantization)-> 부호화(Encoding)

38.RARP ?
   호스트의 물리 주소를 통하여 논리 주소인 IP주소를 얻어오기 위한 프로토콜

39.패킷 교환?
 가상회선 방식:
        단말기 상호간에 논리적인 가상 통신 회선을 미리 설정하여 송신지와 수신지 사이의
         연결을 확립한 후에 설정된 경로를 따라 패킷들을 순서적으로 운방하는 방식이다.
         정보 전송 전에 제어 패킷에 의해 경로가 설정된다.
         통신이 이루어지는 컴퓨터 사이에 데이터 전송의 안정성과 신뢰성이 보장된다.
          모든 패킷은 같은 경로를 통해 발생 순서대로 전송된다        
 
  데이터 그램 방식:
       연결 경로를 설정하지 않고 인접한 노드들의 트래픽 상황을 감안하여 각각의 패킷들을
순서에 상관없이 독립적으로 운반하는 방식이다
        패킷마다 전송 경로가 다르므로, 패킷은 목적지의 완전한 주소를 가져야 한다.
        네트워크의 상황에 따라 적절한 경로로 패킷을 전송하기 때문에 융통성이 좋다
        

40. 주파수 분할 방식 특징
사람의 음성이나 데이터가 아날로그 형태로 전송
인접 채널 사이의 간섭을 막기 위해 보호대역을 둔다
주로 유선 방송에서 많이 사용한다.
터미널 수가 고정되어 잇다.

41.플로딩?
경로 지정 방식에서 각노드에 도착하는 패킷을 자신을 제외한 다른 모든것을 복사하여 전송하는
방식

42.양자화 잡음?
 PAM 펄스의 아날로그 값과 양자화 된 PCM 펄스의 디지털 값의 차이

43.Piggyback
송신측이 대기시간을 설정하기 위한 목적으로 보낸 테스터 프레임용 응답

44.Manchester 코드?
CSMA/CD LAN의 전송부호로 사용된다.
신호 준위 천이가 매 비트 구간의 가운데서 비트1에 대해서는 고준위에서 저준위로 천이하며
비트0은 저 준위에서 고준위로 천이한다.

45.ARP(address resolution protocol)?
네트워크에서 두호스트가 성공적으로 통신하기 위하여 각 하드웨어의 물리적인 주소 문제를 해결
목적지 호스트의 ip주소를 mac 주소로 바꾸는 역할을 한다
ARP 캐시를 사용하므로 캐시에서 대상이 되는 IP주소의 MAC주소를 발견하면 이 MAC 주소가 통신
을 위해 바로 사용된다.

46.GO-BACK-N?
자동 재전송 요청(ARQ) 기법중 데이터 프레임을 연속적으로 전송해 나가다가 NAK를 수신하게 되면 오류가 발생한 프레임 이후에 모든  데이터 프레임을 재전송하는것

47.IP주소
A Class:국가나 대형 통신망
B Class: 중대형 통신망에 사용
C Class: 소규모 통신망에 사용
D Class: 멀티 캐스트용으로 사용
E Class: 실험용으로 사용하며 공용되지 않음

48.DLE
문자 동기 전송 방식에서 데이터 투명성을 위해 삽입되는 제어문자

   
49.에러 제어 자동 전송방식 종류
stop -wait 방식
go-back-n 방식
selectiv-repeat 방식
adaptive 방식

50.전송 계층
종단 간 메세지 전달 서비스를 담당하여 연결형과 비연결형 서비스로 구분된다.

 

      
     


     

     
   